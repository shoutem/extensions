{
  "name": "shoutem.rss-monitoring",
  "version": "4.1.8",
  "private": true,
  "scripts": {
    "@comment init": "Generates env files for all workflow types - should work out of the box",
    "init": "cd config && shx cp .env-e2e-example .env-e2e && shx cp .env-handsoff-example .env-handsoff && shx cp .env-local-example .env-local && cd .. && shx cp .env-example .env",
    "lint": "eslint ./app ./src ./test ./config --ext .js,.ts,.tsx",
    "@comment review": "Should be run before submitting anything to pull request. Saves time and CI resources.",
    "review": "npm prune && npm install && npm run lint && npm run test:e2e",
    "@comment scaffold": "Scaffold up a new module out of template",
    "scaffold": "ENV_RELATIVE_PATH=./.env-local node -r ./config/load-config -r ts-node/register ./cli/index.js",
    "@comment start:handsoff": "Starts complete environment. Requires running init first.",
    "start:handsoff": "docker-compose down && docker-compose up --build -d",
    "@comment start:env": "Starts everything the node service depends on.",
    "start:env": "docker-compose down && docker-compose up -d postgres redis",
    "@comment DB scripts": "Sequelize scripts. For most uses, only 'migrate' is needed.",
    "@comment migrate": "Brings the configured database up to date.",
    "migrate": "ENV_RELATIVE_PATH=./.env-local npm run sequelize -- db:migrate --env current",
    "migrate:undo": "npm run sequelize -- db:migrate:undo --env current",
    "migration:create": "npm run sequelize -- migration:create",
    "@comment migrate:docker": "For use within docker container, skips loading env files",
    "migrate:docker": "npm run sequelize -- db:migrate --env current",
    "seed": "npm run sequelize -- db:seed:all --env current",
    "seed:undo": "npm run sequelize -- db:seed:undo:all --env current",
    "sequelize": "sequelize",
    "@comment start:debug:local": "Starts local debug server. Requires other env services.",
    "start:debug:local": "ENV_RELATIVE_PATH=./.env-local nodemon --require ./config/load-config --inspect=0.0.0.0:9229 ./app/server/index.js --watch ./src/ ./app/ --ext .js,.ts",
    "@comment clear:cache": "Clears cache API that's currently configured",
    "clear:cache": "node -r ts-node/register cli clear-cache",
    "@comment start": "Intended for production. Starts server in basic mode",
    "start": "nodemon --require ./config/load-config ./app/server/index.js",
    "@comment start:dev": "Intended for profiling. Starts server with watch but no debug",
    "start:dev": "ENV_RELATIVE_PATH=./.env-local nodemon --require ./config/load-config ./app/server/index.js --watch ./src/ --ext .js,.ts",
    "@comment test:e2e:handsoff": "Runs API tests with Docker, completely self sufficient.",
    "test:e2e:handsoff": "docker-compose -f docker-compose-e2e.yml rm -fv postgres_test && docker-compose -f docker-compose-e2e.yml up --remove-orphans --build --exit-code-from api-tester && docker-compose -f docker-compose-e2e.yml down --volumes",
    "@comment test:e2e:internal": "Runs API tests with preset env vars. Probably don't want to run this manually",
    "test:e2e:internal": "mocha --require ./config/load-config --require ts-node/register **/*.spec.ts --timeout 10000 --bail",
    "@comment test:e2e:local": "Runs API tests with config file. Intended to be run from localhost. Faster than handsoff if you're iterating tests and don't want to teardown constantly.",
    "test:e2e:local": "ENV_RELATIVE_PATH=./.env-local mocha --require ./config/load-config --require ts-node/register **/*.spec.ts --timeout 10000 --bail",
    "start:server:docker": "node ./app/server/index.js",
    "start:scheduler:docker": "node ./app/scheduler/process-monitoring-job/index.js",
    "start:debug:docker": "nodemon --inspect=0.0.0.0:9229 ./app/server/index.js --watch ./src/ ./app/ --ext .js,.ts",
    "@comment": "start process monitoring scheduled job",
    "start:process:monitoring": "ENV_RELATIVE_PATH=./.env-local nodemon --require ./config/load-config --require ./app/scheduler/process-monitoring-job/index.js"
  },
  "dependencies": {
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "bluebird": "^3.5.1",
    "body-parser": "^1.18.2",
    "bunyan": "^1.8.12",
    "change-case": "^3.0.1",
    "content-type": "^1.0.4",
    "cors": "^2.8.4",
    "dotenv": "^8.6.0",
    "env-cmd": "^7.0.0",
    "express": "^4.16.2",
    "express-urlrewrite": "^1.2.0",
    "extendify": "^1.0.0",
    "glob": "^7.1.2",
    "inquirer": "^5.0.0",
    "json-api-serializer": "^1.12.0",
    "lodash": "^4.17.15",
    "newrelic": "^6.4.0",
    "node-schedule": "^1.3.2",
    "parse-int": "^1.0.2",
    "pg": "^6.4.2",
    "pluralize": "^7.0.0",
    "raven": "^2.6.4",
    "redis": "^3.0.2",
    "reflect-metadata": "^0.1.13",
    "request": "^2.88.2",
    "request-promise": "^4.2.5",
    "scaffander": "1.0.6",
    "sequelize": "^5.19.0",
    "sequelize-cli": "^5.5.0",
    "sequelize-typescript": "2.1.6",
    "sequelize-values": "^1.1.0",
    "sleep-promise": "^8.0.1",
    "ts-node": "^8.8.1",
    "typescript": "4.1.2",
    "urijs": "^1.19.0",
    "uuid": "^3.3.2",
    "yaml-js": "^0.2.3",
    "yargonaut": "^1.1.2",
    "yargs": "^15.0.2"
  },
  "devDependencies": {
    "@shoutem/eslint-config-base": "^1.0.1",
    "@types/bluebird": "^3.5.26",
    "@types/body-parser": "^1.17.0",
    "@types/bunyan": "^1.8.6",
    "@types/chai": "^4.2.11",
    "@types/cors": "^2.8.5",
    "@types/cryptojs": "^3.1.29",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.16.1",
    "@types/lodash": "^4.14.123",
    "@types/mocha": "^7.0.2",
    "@types/node": "^12.0.0",
    "@types/sequelize": "^4.27.49",
    "@types/validator": "^10.11.0",
    "@typescript-eslint/eslint-plugin": "^2.25.0",
    "@typescript-eslint/parser": "^2.25.0",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-import": "^2.21.1",
    "eslint-plugin-prettier": "^3.1.3",
    "jsonapi-serializer": "^3.6.6",
    "mocha": "^5.0.0",
    "nodemon": "^1.14.11",
    "prettier": "^1.19.1",
    "shx": "^0.3.2",
    "sinon": "^4.1.6",
    "sinon-chai": "^2.14.0"
  },
  "optionalDependencies": {
    "fsevents": "*"
  },
  "engines": {
    "node": ">=12.16.1"
  }
}
